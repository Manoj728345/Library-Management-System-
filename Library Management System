import java.util.Scanner;
import java.util.ArrayList;
import java.util.Date;

class Book {
    private String title;
    private String author;
    private String isbn;
    private boolean isAvailable;
    private Date dueDate;

    public Book(String title, String author, String isbn) {
        this.title = title;
        this.author = author;
        this.isbn = isbn;
        this.isAvailable = true;
        this.dueDate = null;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getIsbn() {
        return isbn;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void borrowBook() {
        if (isAvailable) {
            isAvailable = false;
            dueDate = new Date(System.currentTimeMillis() + 14 * 24 * 60 * 60 * 1000); // 2 weeks from now
        }
    }

    public void returnBook() {
        isAvailable = true;
        dueDate = null;
    }

    public Date getDueDate() {
        return dueDate;
    }

    @Override
    public String toString() {
        return "Book{" +
                "title='" + title + '\'' +
                ", author='" + author + '\'' +
                ", isbn='" + isbn + '\'' +
                ", isAvailable=" + isAvailable +
                ", dueDate=" + (dueDate == null ? "N/A" : dueDate) +
                '}';
    }
}

class Library {
    private ArrayList<Book> books;

    public Library() {
        this.books = new ArrayList<>();
    }

    public void addBook(String title, String author, String isbn) {
        books.add(new Book(title, author, isbn));
    }

    public void removeBook(String isbn) {
        books.removeIf(book -> book.getIsbn().equals(isbn));
    }

    public Book findBookByIsbn(String isbn) {
        for (Book book : books) {
            if (book.getIsbn().equals(isbn)) {
                return book;
            }
        }
        return null;
    }

    public void borrowBook(String isbn) {
        Book book = findBookByIsbn(isbn);
        if (book != null && book.isAvailable()) {
            book.borrowBook();
            System.out.println("You have borrowed: " + book.getTitle() + ". Due date: " + book.getDueDate());
        } else {
            System.out.println("Book is either not available or does not exist.");
        }
    }

    public void returnBook(String isbn) {
        Book book = findBookByIsbn(isbn);
        if (book != null && !book.isAvailable()) {
            book.returnBook();
            System.out.println("You have successfully returned: " + book.getTitle());
        } else {
            System.out.println("This book is either not borrowed or does not exist.");
        }
    }

    public void viewBooks() {
        if (books.isEmpty()) {
            System.out.println("No books available in the library.");
            return;
        }
        for (Book book : books) {
            System.out.println(book);
        }
    }

    public void searchBook(String keyword) {
        boolean found = false;
        for (Book book : books) {
            if (book.getTitle().toLowerCase().contains(keyword.toLowerCase()) || book.getAuthor().toLowerCase().contains(keyword.toLowerCase())) {
                System.out.println(book);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No books found with the keyword: " + keyword);
        }
    }
}

public class LibraryManagementSystem {
    private static Scanner scanner = new Scanner(System.in);
    private static Library library = new Library();

    public static void main(String[] args) {
        while (true) {
            displayMenu();
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline character

            switch (choice) {
                case 1:
                    addBook();
                    break;
                case 2:
                    removeBook();
                    break;
                case 3:
                    borrowBook();
                    break;
                case 4:
                    returnBook();
                    break;
                case 5:
                    viewBooks();
                    break;
                case 6:
                    searchBook();
                    break;
                case 7:
                    System.out.println("Exiting the system. Thank you!");
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    private static void displayMenu() {
        System.out.println("\nLibrary Management System");
        System.out.println("1. Add a new book");
        System.out.println("2. Remove a book");
        System.out.println("3. Borrow a book");
        System.out.println("4. Return a book");
        System.out.println("5. View all books");
        System.out.println("6. Search for a book");
        System.out.println("7. Exit");
        System.out.print("Enter your choice: ");
    }

    private static void addBook() {
        System.out.print("Enter book title: ");
        String title = scanner.nextLine();
        System.out.print("Enter book author: ");
        String author = scanner.nextLine();
        System.out.print("Enter book ISBN: ");
        String isbn = scanner.nextLine();

        library.addBook(title, author, isbn);
        System.out.println("Book added successfully!");
    }

    private static void removeBook() {
        System.out.print("Enter book ISBN to remove: ");
        String isbn = scanner.nextLine();

        library.removeBook(isbn);
        System.out.println("Book removed successfully!");
    }

    private static void borrowBook() {
        System.out.print("Enter book ISBN to borrow: ");
        String isbn = scanner.nextLine();

        library.borrowBook(isbn);
    }

    private static void returnBook() {
        System.out.print("Enter book ISBN to return: ");
        String isbn = scanner.nextLine();

        library.returnBook(isbn);
    }

    private static void viewBooks() {
        library.viewBooks();
    }

    private static void searchBook() {
        System.out.print("Enter a keyword to search (title or author): ");
        String keyword = scanner.nextLine();

        library.searchBook(keyword);
    }
}
